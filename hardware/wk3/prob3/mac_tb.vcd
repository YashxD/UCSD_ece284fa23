$date
	Wed Nov  1 19:18:41 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module mac_tb $end
$var wire 16 ! out [15:0] $end
$var reg 16 " c [15:0] $end
$var reg 1 # clk $end
$var reg 16 $ expected_out [15:0] $end
$var integer 32 % i [31:0] $end
$var integer 32 & u [31:0] $end
$var integer 32 ' w_file [31:0] $end
$var integer 32 ( w_scan_file [31:0] $end
$var integer 32 ) x_file [31:0] $end
$var integer 32 * x_scan_file [31:0] $end
$scope function mac_predicted $end
$var reg 4 + act0 [3:0] $end
$var reg 4 , act1 [3:0] $end
$var reg 4 - act2 [3:0] $end
$var reg 4 . act3 [3:0] $end
$var reg 16 / bias [15:0] $end
$var reg 16 0 mac_predicted [15:0] $end
$var reg 4 1 weight0 [3:0] $end
$var reg 4 2 weight1 [3:0] $end
$var reg 4 3 weight2 [3:0] $end
$var reg 4 4 weight3 [3:0] $end
$upscope $end
$scope function w_bin $end
$var reg 4 5 w_bin [3:0] $end
$var integer 32 6 weight [31:0] $end
$upscope $end
$scope function x_bin $end
$var reg 4 7 x_bin [3:0] $end
$var integer 32 8 act [31:0] $end
$upscope $end
$scope module mac_wrapper_instance $end
$var wire 4 9 a0 [3:0] $end
$var wire 4 : a1 [3:0] $end
$var wire 4 ; a2 [3:0] $end
$var wire 4 < a3 [3:0] $end
$var wire 4 = b0 [3:0] $end
$var wire 4 > b1 [3:0] $end
$var wire 4 ? b2 [3:0] $end
$var wire 4 @ b3 [3:0] $end
$var wire 16 A c [15:0] $end
$var wire 1 # clk $end
$var wire 16 B out [15:0] $end
$var reg 16 C c_q [15:0] $end
$scope module mac_instance_0 $end
$var wire 4 D a0 [3:0] $end
$var wire 4 E a1 [3:0] $end
$var wire 4 F a2 [3:0] $end
$var wire 4 G a3 [3:0] $end
$var wire 4 H b0 [3:0] $end
$var wire 4 I b1 [3:0] $end
$var wire 4 J b2 [3:0] $end
$var wire 4 K b3 [3:0] $end
$var wire 16 L c [15:0] $end
$var wire 16 M out [15:0] $end
$var wire 16 N psum_q [15:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
b10000000000000000000000000000100 )
bx (
b10000000000000000000000000000011 '
bx &
bx %
b0 $
0#
bx "
bx !
$end
#2
1#
#3
b0 %
0#
#4
1#
#5
b1 %
b1111111111010000 $
b1111111111010000 0
b110 +
b111 ,
b1 -
b11 .
b1 1
b1001 2
b111 3
b1100 4
b0 /
b0 "
b0 A
b1100 @
b11 <
b111 ?
b1 ;
b1001 >
b111 :
b1 =
b1100 5
b0 6
b110 9
b11 7
b1 8
b1 *
b1 (
b100 &
0#
#6
b1111111111010000 !
b1111111111010000 B
b1111111111010000 M
b1111111111010000 N
b0 C
b0 L
b1100 K
b111 J
b1001 I
b1 H
b11 G
b1 F
b111 E
b110 D
1#
#7
b10 %
b1111111110011110 $
b1111111110011110 0
b10 +
b10 ,
b1111 -
b100 .
b1101 1
b1110 2
b1100 3
b101 4
b1111111111010000 /
b1111111111010000 "
b1111111111010000 A
b101 @
b100 <
b1100 ?
b1111 ;
b1110 >
b10 :
b1101 =
b101 5
b1 6
b10 9
b100 7
b0 8
b100 &
0#
#8
b1111111111010000 C
b1111111111010000 L
b101 K
b1100 J
b1110 I
b1101 H
b100 G
b1111 F
b10 E
b1111111110011110 !
b1111111110011110 B
b1111111110011110 M
b1111111110011110 N
b10 D
1#
#9
b11 %
b1111111110000110 $
b1111111110000110 0
b110 +
b100 ,
b0 -
b10 .
b1010 1
b100 2
b10 3
b1110 4
b1111111110011110 /
b1111111110011110 "
b1111111110011110 A
b1110 @
b10 <
b10 ?
b0 ;
b100 >
b100 :
b1010 =
b1110 5
b0 6
b110 9
b10 7
b0 8
b100 &
0#
#10
b1111111110011110 C
b1111111110011110 L
b1110 K
b10 J
b100 I
b1010 H
b10 G
b0 F
b100 E
b1111111110000110 !
b1111111110000110 B
b1111111110000110 M
b1111111110000110 N
b110 D
1#
#11
b100 %
b1111111101011001 $
b1111111101011001 0
b1 +
b1010 ,
b10 -
b1011 .
b0 1
b1100 2
b11 3
b1111 4
b1111111110000110 /
b1111111110000110 "
b1111111110000110 A
b1111 @
b1011 <
b11 ?
b10 ;
b1100 >
b1 6
b1010 :
b0 =
b1111 5
b1 9
b1011 7
b1 8
b100 &
0#
#12
b1111111110000110 C
b1111111110000110 L
b1111 K
b11 J
b1100 I
b0 H
b1011 G
b10 F
b1010 E
b1111111101011001 !
b1111111101011001 B
b1111111101011001 M
b1111111101011001 N
b1 D
1#
#13
b101 %
b1111111101111111 $
b1111111101111111 0
b10 +
b110 ,
b100 -
b1010 .
b1100 1
b101 2
b1010 3
b100 4
b1111111101011001 /
b1111111101011001 "
b1111111101011001 A
b100 @
b1010 <
b1010 ?
b100 ;
b101 >
b110 :
b1100 =
b100 5
b0 6
b10 9
b1010 7
b0 8
b100 &
0#
#14
b1111111101011001 C
b1111111101011001 L
b100 K
b1010 J
b101 I
b1100 H
b1010 G
b100 F
b1111111101111111 !
b1111111101111111 B
b1111111101111111 M
b1111111101111111 N
b110 E
b10 D
1#
#15
0#
#25
